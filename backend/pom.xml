<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.ltaake.pound</groupId>
    <artifactId>pound-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>backend</artifactId>
  <packaging>jar</packaging>

  <properties>
    <sonar.projectKey>com.ltaake.pound:backend</sonar.projectKey>
    <sonar.projectName>Pound Backend</sonar.projectName>
    <sonar.projectVersion>${project.version}</sonar.projectVersion>

    <sonar.links.homepage>https://github.com/mrm1st3r/pound</sonar.links.homepage>
    <sonar.links.ci>https://travis-ci.org/mrm1st3r/pound</sonar.links.ci>
    <sonar.links.scm>https://github.com/mrm1st3r/pound</sonar.links.scm>
    <sonar.links.issue>https://github.com/mrm1st3r/pound/issues</sonar.links.issue>

    <sonar.sources>src/main</sonar.sources>
    <sonar.tests>src/test</sonar.tests>
    <sonar.binaries>target/classes</sonar.binaries>
    <sonar.junit.reportsPath>reports/java/surefire-reports</sonar.junit.reportsPath>
    <sonar.jacoco.reportPath>reports/java/jacoco.exec</sonar.jacoco.reportPath>
  </properties>

  <dependencies>
    <!-- Project modules -->
    <dependency>
      <groupId>com.ltaake.pound</groupId>
      <artifactId>backend-rest</artifactId>
    </dependency>

    <!-- Spring -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jooq</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.jooq</groupId>
          <artifactId>jooq</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Database -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-meta-extensions</artifactId>
      <version>${jooq.version}</version>
    </dependency>

    <!-- Kotlin -->
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
    </dependency>

    <!-- Other -->
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-kotlin</artifactId>
      <version>2.9.4.1</version>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <!-- kotlin compiler -->
        <artifactId>kotlin-maven-plugin</artifactId>
        <groupId>org.jetbrains.kotlin</groupId>
        <executions>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration combine.self="append">
              <compilerPlugins>
                <plugin>spring</plugin>
                <plugin>jpa</plugin>
                <plugin>no-arg</plugin>
              </compilerPlugins>
              <jvmTarget>1.8</jvmTarget>
              <sourceDirs>
                <sourceDir>${project.basedir}/target/generated-sources/jooq</sourceDir>
                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- java compiler -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>

      <!-- We're using the properties plugin to load external properties into Maven.
     See this excellent blog post for an explanation:
     http://www.petrikainulainen.net/programming/tips-and-tricks/creating-profile-specific-configuration-files-with-maven/ -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>src/main/resources/application-dev.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- The jOOQ code generator plugin -->
      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>${jooq.version}</version>

        <executions>
          <execution>
            <id>generate-jooq</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <jdbc>
                <driver>${spring.datasource.driver-class-name}</driver>
                <url>${spring.datasource.url}</url>
                <user>${spring.datasource.username}</user>
                <password>${spring.datasource.password}</password>
              </jdbc>
              <generator>
                <database>
                  <inputSchema>public</inputSchema>
                </database>
                <generate>
                  <generatedAnnotation>false</generatedAnnotation>
                  <instanceFields>true</instanceFields>
                  <pojos>true</pojos>
                </generate>
                <target>
                  <packageName>com.ltaake.pound.jooq</packageName>
                  <directory>target/generated-sources/jooq</directory>
                </target>
              </generator>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
      <!-- The Postgres schema is loaded here -->
    <profile>
      <id>initDb</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <version>1.5</version>

            <configuration>
              <skip>${maven.test.skip}</skip>
            </configuration>

            <executions>
              <execution>
                <id>create-database-postgres</id>
                <phase>initialize</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <driver>${spring.datasource.driver-class-name}</driver>
                  <url>${spring.datasource.url}</url>
                  <username>${spring.datasource.username}</username>
                  <password>${spring.datasource.password}</password>
                  <autocommit>true</autocommit>
                  <srcFiles>
                    <srcFile>src/main/resources/db.sql</srcFile>
                  </srcFiles>
                </configuration>
              </execution>
            </executions>

            <dependencies>
              <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgres.version}</version>
              </dependency>
            </dependencies>
          </plugin>

        </plugins>
      </build>
    </profile>
  </profiles>
</project>
