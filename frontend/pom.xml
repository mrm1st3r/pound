<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.ltaake.pound</groupId>
    <artifactId>pound-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>frontend</artifactId>
  <packaging>jar</packaging>

  <properties>
    <npm-goal>build</npm-goal>
  </properties>

  <dependencies>
    <dependency>
      <!-- required to make sure reactor order is correct -->
      <groupId>com.ltaake.pound</groupId>
      <artifactId>api</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>src-gen</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>extract-swagger-api-specification</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.ltaake.pound</groupId>
                  <artifactId>api</artifactId>
                  <version>${project.version}</version>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <includes>*.yaml</includes>
                </artifactItem>
              </artifactItems>
              <includes>**/*.yaml</includes>
              <excludes>**/*.properties</excludes>
              <outputDirectory>${project.build.directory}/swagger-model</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-codegen-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-client-stubs</id>
            <phase>process-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <output>src-gen</output>
              <inputSpec>${project.build.directory}/swagger-model/swagger.yaml</inputSpec>
              <language>typescript-angular</language>
              <apiPackage>api</apiPackage>
              <modelPackage>model</modelPackage>
              <templateDirectory>swaggerTemplates</templateDirectory>
              <!--
              Uncomment to see all options
              -->
              <!--
              <configHelp>true</configHelp>
               -->

              <!--
              <modelNamePrefix></modelNamePrefix>
              <modelNameSuffix>Model</modelNameSuffix>
              -->
              <configOptions>
                <!--
                <modelPropertyNaming>camelCase</modelPropertyNaming>
                -->
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>npm build</id>
            <phase>compile</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run ${npm-goal}</arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm test</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>test</phase>
            <configuration>
              <arguments>run test</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>process-classes</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.basedir}/dist</directory>
                </resource>
              </resources>
              <outputDirectory>${project.build.directory}/classes/static</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>npm-and-node</id>
      <activation>
        <file>
          <missing>node</missing>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>install node and npm</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <configuration>
                  <npmVersion>6.4.1</npmVersion>
                  <nodeVersion>v8.12.0</nodeVersion>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>npm-install</id>
      <activation>
        <file>
          <missing>node_modules</missing>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>npm install</id>
                <goals>
                  <goal>npm</goal>
                </goals>
                <configuration>
                  <arguments>install</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>clean-node</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-clean-plugin</artifactId>
            <configuration>
              <filesets>
                <fileset>
                  <directory>node</directory>
                  <directory>node_modules</directory>
                </fileset>
              </filesets>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>docker</id>
      <properties>
        <npm-goal>build-docker</npm-goal>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>default</id>
                <goals>
                  <goal>build</goal>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <repository>ltaake/pound-ui-frontend</repository>
              <tag>${project.version}</tag>
            </configuration>
          </plugin>

        </plugins>
      </build>
    </profile>

    <profile>
      <id>docker-arm</id>
      <properties>
        <npm-goal>build-docker</npm-goal>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>default</id>
                <goals>
                  <goal>build</goal>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <dockerfile>Dockerfile.armv7</dockerfile>
              <repository>ltaake/pound-ui-frontend</repository>
              <tag>arm-${project.version}</tag>
            </configuration>
          </plugin>

        </plugins>
      </build>
    </profile>

  </profiles>
</project>
